{"ast":null,"code":"var _jsxFileName = \"/Users/kevinterrier/adm-sca/client/src/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport * as Realm from \"realm-web\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APPID = \"scanup-bnmev\";\nconst APP = new Realm.App({\n  id: APPID\n});\nlet tableau = [];\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loginAnonymous = async () => {\n      const user = await APP.logIn(Realm.Credentials.emailPassword(\"public@scanup.vicat.fr\", \"LeAheBaWtTRbM3KP\"));\n      this.props.setUser(user);\n      const client = APP.currentUser.mongoClient(\"mongodb-atlas\");\n      const db = client.db(\"scanup-db\");\n      const collection = db.collection(\"ScanDivision\");\n      const users = (await collection.find()).slice(0, 10);\n      const newList = [];\n\n      if (users) {\n        console.log(users);\n\n        for (let user of users) {\n          newList.push( /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"title\",\n              children: [\"User : \", user.user]\n            }, user.user, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"division: \", user.division]\n            }, user.division, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Role:\", user.role]\n            }, user.role, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Certificat :\", user.certificat]\n            }, user.certificat, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-update\",\n            value: user.user,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-delete\",\n            value: user.user,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trait\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this));\n        } //newList.push(JSON.stringify(col));\n        //alert(jsonDatas)\n\n\n        this.setState({\n          list: newList\n        });\n      }\n    };\n\n    this.state = {\n      list: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: this.loginAnonymous,\n        children: \"Users's list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst Dashboard = () => {\n  _s();\n\n  const history = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      const user = jwt.decode(token);\n\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        history.replace(\"/login\");\n      } else {}\n    }\n  });\n  const [user, setUser] = React.useState(APP.curentUser);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scan'up Dashboard \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Login, {\n        setUser: setUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn \",\n        children: \"Add user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trait1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"T7pT2+RZthBRPANQbSCAx45AwgY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/kevinterrier/adm-sca/client/src/pages/Dashboard.js"],"names":["React","useEffect","jwt","useNavigate","useState","Realm","APPID","APP","App","id","tableau","Login","Component","constructor","props","loginAnonymous","user","logIn","Credentials","emailPassword","setUser","client","currentUser","mongoClient","db","collection","users","find","slice","newList","console","log","push","division","role","certificat","setState","list","state","render","Dashboard","history","token","localStorage","getItem","decode","removeItem","replace","curentUser"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport * as Realm from \"realm-web\";\nimport \"./Dashboard.css\";\n\nconst APPID = \"scanup-bnmev\";\nconst APP = new Realm.App({ id: APPID });\n\nlet tableau = [];\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { list: [] };\n  }\n\n  loginAnonymous = async () => {\n    const user = await APP.logIn(\n      Realm.Credentials.emailPassword(\n        \"public@scanup.vicat.fr\",\n        \"LeAheBaWtTRbM3KP\"\n      )\n    );\n    this.props.setUser(user);\n    const client = APP.currentUser.mongoClient(\"mongodb-atlas\");\n    const db = client.db(\"scanup-db\");\n    const collection = db.collection(\"ScanDivision\");\n    const users = (await collection.find()).slice(0, 10);\n    const newList = [];\n    if (users) {\n      console.log(users);\n      for (let user of users) {\n        newList.push(\n          <ul>\n            <li className=\"title\" key={user.user}>\n              User : {user.user}\n            </li>\n            <li key={user.division}>division: {user.division}</li>\n            <li key={user.role}>Role:{user.role}</li>\n            <li key={user.certificat}>Certificat :{user.certificat}</li>\n          </ul>,\n\n          <button className=\"btn btn-update\" value={user.user}>\n            Update\n          </button>,\n          <button className=\"btn btn-delete\" value={user.user}>\n            Delete\n          </button>,\n          <div className=\"trait\"></div>\n        );\n      }\n      //newList.push(JSON.stringify(col));\n      //alert(jsonDatas)\n      this.setState({ list: newList });\n    }\n  };\n  render() {\n    return (\n      <div>\n        <button className=\"btn\" onClick={this.loginAnonymous}>\n          Users's list\n        </button>\n        <p>{this.state.list}</p>\n        <ul></ul>\n      </div>\n    );\n  }\n}\n\nconst Dashboard = () => {\n  const history = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = jwt.decode(token);\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        history.replace(\"/login\");\n      } else {\n      }\n    }\n  });\n  const [user, setUser] = React.useState(APP.curentUser);\n\n  return (\n    <div className=\"main\">\n      <h1>Scan'up Dashboard </h1>\n      <div className=\"main-buttons\">\n        <Login setUser={setUser} />\n        <button className=\"btn \">Add user</button>\n        <div className=\"trait1\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}