{"ast":null,"code":"import { useState, React } from \"react\"; //import { useNavigate } from \"react-router-dom\";\n\nimport * as Realm from \"realm-web\";\n\nfunction APP() {\n  const APPID = \"scanup-bnmev\";\n  const APP = new Realm.App({\n    id: APPID\n  });\n\n  class Login extends React.Component {\n    constructor(...args) {\n      var _s = $RefreshSig$();\n\n      super(...args);\n\n      this.loginAnonymous = async () => {\n        const user = await APP.logIn(Realm.Credentials.emailPassword(\"public@scanup.vicat.fr\", \"LeAheBaWtTRbM3KP\"));\n        this.props.setUser(user);\n        const client = APP.currentUser.mongoClient(\"mongodb-atlas\");\n        const db = client.db(\"scanup-db\");\n        const collection = db.collection(\"ScanDivision\");\n      };\n\n      this.mongopush = _s(async () => {\n        _s();\n\n        const [email, setEmail] = useState(\"\");\n        const [password, setPassword] = useState(\"\");\n        const [certificat, setCertificat] = useState(\"\");\n        const [role, setRole] = useState(\"\");\n        const [division, setDivision] = useState(\"\");\n        const [partition, setPartition] = useState(\"\");\n        db.collection.insert({\n          certificat: {\n            certificat\n          },\n          division: {\n            division\n          },\n          password: {\n            password\n          },\n          role: {\n            role\n          },\n          user: {\n            email\n          },\n          partition: {\n            partition\n          }\n        });\n      }, \"G8fwCwEbpKLVsAxIF4EK6Uq06WI=\");\n    }\n\n  }\n}\n\n_c = APP;\nexport default APP;\n\nvar _c;\n\n$RefreshReg$(_c, \"APP\");","map":{"version":3,"sources":["/Users/kevinterrier/adm-sca/client/src/pages/connectUser.js"],"names":["useState","React","Realm","APP","APPID","App","id","Login","Component","loginAnonymous","user","logIn","Credentials","emailPassword","props","setUser","client","currentUser","mongoClient","db","collection","mongopush","email","setEmail","password","setPassword","certificat","setCertificat","role","setRole","division","setDivision","partition","setPartition","insert"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,OAAhC,C,CACA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,WAAvB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,KAAK,GAAG,cAAd;AACA,QAAMD,GAAG,GAAG,IAAID,KAAK,CAACG,GAAV,CAAc;AAAEC,IAAAA,EAAE,EAAEF;AAAN,GAAd,CAAZ;;AAEA,QAAMG,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAAA;AAAA;;AAAA;;AAAA,WAClCC,cADkC,GACjB,YAAY;AAC3B,cAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,KAAJ,CACjBT,KAAK,CAACU,WAAN,CAAkBC,aAAlB,CACE,wBADF,EAEE,kBAFF,CADiB,CAAnB;AAMA,aAAKC,KAAL,CAAWC,OAAX,CAAmBL,IAAnB;AACA,cAAMM,MAAM,GAAGb,GAAG,CAACc,WAAJ,CAAgBC,WAAhB,CAA4B,eAA5B,CAAf;AACA,cAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,CAAU,WAAV,CAAX;AACA,cAAMC,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,cAAd,CAAnB;AACD,OAZiC;;AAAA,WAalCC,SAbkC,MAatB,YAAY;AAAA;;AACtB,cAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,EAAD,CAAlC;AACA,cAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAC,EAAD,CAAxC;AACA,cAAM,CAAC0B,UAAD,EAAaC,aAAb,IAA8B3B,QAAQ,CAAC,EAAD,CAA5C;AACA,cAAM,CAAC4B,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,CAAC,EAAD,CAAhC;AACA,cAAM,CAAC8B,QAAD,EAAWC,WAAX,IAA0B/B,QAAQ,CAAC,EAAD,CAAxC;AACA,cAAM,CAACgC,SAAD,EAAYC,YAAZ,IAA4BjC,QAAQ,CAAC,EAAD,CAA1C;AAEAmB,QAAAA,EAAE,CAACC,UAAH,CAAcc,MAAd,CAAqB;AACnBR,UAAAA,UAAU,EAAE;AAAEA,YAAAA;AAAF,WADO;AAEnBI,UAAAA,QAAQ,EAAE;AAAEA,YAAAA;AAAF,WAFS;AAGnBN,UAAAA,QAAQ,EAAE;AAAEA,YAAAA;AAAF,WAHS;AAInBI,UAAAA,IAAI,EAAE;AAAEA,YAAAA;AAAF,WAJa;AAKnBlB,UAAAA,IAAI,EAAE;AAAEY,YAAAA;AAAF,WALa;AAMnBU,UAAAA,SAAS,EAAE;AAAEA,YAAAA;AAAF;AANQ,SAArB;AAQD,OA7BiC;AAAA;;AAAA;AA+BrC;;KAnCQ7B,G;AAqCT,eAAeA,GAAf","sourcesContent":["import { useState, React } from \"react\";\n//import { useNavigate } from \"react-router-dom\";\nimport * as Realm from \"realm-web\";\n\nfunction APP() {\n  const APPID = \"scanup-bnmev\";\n  const APP = new Realm.App({ id: APPID });\n\n  class Login extends React.Component {\n    loginAnonymous = async () => {\n      const user = await APP.logIn(\n        Realm.Credentials.emailPassword(\n          \"public@scanup.vicat.fr\",\n          \"LeAheBaWtTRbM3KP\"\n        )\n      );\n      this.props.setUser(user);\n      const client = APP.currentUser.mongoClient(\"mongodb-atlas\");\n      const db = client.db(\"scanup-db\");\n      const collection = db.collection(\"ScanDivision\");\n    };\n    mongopush = async () => {\n      const [email, setEmail] = useState(\"\");\n      const [password, setPassword] = useState(\"\");\n      const [certificat, setCertificat] = useState(\"\");\n      const [role, setRole] = useState(\"\");\n      const [division, setDivision] = useState(\"\");\n      const [partition, setPartition] = useState(\"\");\n\n      db.collection.insert({\n        certificat: { certificat },\n        division: { division },\n        password: { password },\n        role: { role },\n        user: { email },\n        partition: { partition },\n      });\n    };\n  }\n}\n\nexport default APP;\n"]},"metadata":{},"sourceType":"module"}