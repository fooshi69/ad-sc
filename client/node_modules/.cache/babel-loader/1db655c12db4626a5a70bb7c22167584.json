{"ast":null,"code":"var _jsxFileName = \"/Users/kevinterrier/adm-sca/client/src/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport * as Realm from \"realm-web\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APPID = \"scanup-bnmev\";\nconst APP = new Realm.App({\n  id: APPID\n});\nconst tableau = [];\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loginAnonymous = async () => {\n      const user = await APP.logIn(Realm.Credentials.emailPassword(\"public@scanup.vicat.fr\", \"LeAheBaWtTRbM3KP\"));\n      this.props.setUser(user);\n      console.log(user);\n      const client = APP.currentUser.mongoClient(\"mongodb-atlas\");\n      console.log(client);\n      const db = client.db(\"scanup-db\");\n      const collection = db.collection(\"ScanDivision\");\n      console.log(collection);\n      const col = (await collection.find()).slice(0, 10);\n      console.log(col);\n      const newList = [];\n\n      if (col) {\n        tableau.push(col);\n        var jsonDatas = JSON.stringify(tableau); //alert(jsonDatas)\n\n        newList.push(jsonDatas);\n        this.setState({\n          list: newList\n        });\n        alert(newList);\n      }\n    };\n\n    this.state = {\n      list: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.loginAnonymous,\n        children: \"Utilisateurs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst Dashboard = () => {\n  _s();\n\n  const history = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      const user = jwt.decode(token);\n\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        history.replace(\"/login\");\n      } else {}\n    }\n  });\n  const [user, setUser] = React.useState(APP.curentUser);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.loginAnonymous,\n      children: \"Utilisateurs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tableau de bord scanup \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Login, {\n      setUser: this.setUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: \"json.stringify(list)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n  console.log(\"yolo\");\n};\n\n_s(Dashboard, \"T7pT2+RZthBRPANQbSCAx45AwgY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/kevinterrier/adm-sca/client/src/pages/Dashboard.js"],"names":["React","useEffect","jwt","useNavigate","useState","Realm","APPID","APP","App","id","tableau","Login","Component","constructor","props","loginAnonymous","user","logIn","Credentials","emailPassword","setUser","console","log","client","currentUser","mongoClient","db","collection","col","find","slice","newList","push","jsonDatas","JSON","stringify","setState","list","alert","state","render","Dashboard","history","token","localStorage","getItem","decode","removeItem","replace","curentUser"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport * as Realm from \"realm-web\";\n\nconst APPID = \"scanup-bnmev\";\nconst APP = new Realm.App({ id: APPID });\n\nconst tableau = [];\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { list: [] };\n  }\n\n  loginAnonymous = async () => {\n    const user = await APP.logIn(\n      Realm.Credentials.emailPassword(\n        \"public@scanup.vicat.fr\",\n        \"LeAheBaWtTRbM3KP\"\n      )\n    );\n    this.props.setUser(user);\n    console.log(user);\n    const client = APP.currentUser.mongoClient(\"mongodb-atlas\");\n    console.log(client);\n    const db = client.db(\"scanup-db\");\n    const collection = db.collection(\"ScanDivision\");\n    console.log(collection);\n    const col = (await collection.find()).slice(0, 10);\n    console.log(col);\n    const newList = [];\n    if (col) {\n      tableau.push(col);\n      var jsonDatas = JSON.stringify(tableau);\n      //alert(jsonDatas)\n      newList.push(jsonDatas);\n\n      this.setState({ list: newList });\n      alert(newList);\n    }\n  };\n  render() {\n    return (\n      <div>\n        <button onClick={this.loginAnonymous}>Utilisateurs</button>\n      </div>\n    );\n  }\n}\n\nconst Dashboard = () => {\n  const history = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = jwt.decode(token);\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        history.replace(\"/login\");\n      } else {\n      }\n    }\n  });\n  const [user, setUser] = React.useState(APP.curentUser);\n\n  return (\n    <div>\n      <button onClick={this.loginAnonymous}>Utilisateurs</button>\n      <h1>Tableau de bord scanup </h1>\n      <Login setUser={this.setUser} />\n      <ul>json.stringify(list)</ul>\n    </div>\n  );\n  console.log(\"yolo\");\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}