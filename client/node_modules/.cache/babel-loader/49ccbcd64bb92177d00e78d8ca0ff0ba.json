{"ast":null,"code":"var _jsxFileName = \"/Users/kevinterrier/adm-sca/client/src/pages/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; //import { useNavigate } from \"react-router-dom\";\n\nimport * as Realm from \"realm-web\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction APP() {\n  _s();\n\n  const APPID = \"scanup-bnmev\";\n  const APP = new Realm.App({\n    id: APPID\n  });\n\n  const updateUser = async () => {\n    const user = await APP.logIn(Realm.Credentials.emailPassword(\"public@scanup.vicat.fr\", \"LeAheBaWtTRbM3KP\"));\n    this.props.setUser(user);\n    const client = APP.currentUser.mongoClient(\"mongodb-atlas\");\n    const db = client.db(\"scanup-db\");\n    const collection = db.collection(\"ScanDivision\");\n  };\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [certificat, setCertificat] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [division, setDivision] = useState(\"\");\n  const [partition, setPartition] = useState(\"\");\n  db.collection.insert({\n    certificat: {\n      certificat\n    },\n    division: {\n      division\n    },\n    password: {\n      password\n    },\n    role: {\n      role\n    },\n    user: {\n      email\n    },\n    partition: {\n      partition\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Add user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        type: \"email\",\n        placeholder: \"Email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: password,\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: certificat,\n        placeholder: \"Certificat\",\n        onChange: e => setCertificat(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: role,\n        placeholder: \"Role\",\n        onChange: e => setRole(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: division,\n        placeholder: \"Division\",\n        onChange: e => setDivision(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: partition,\n        placeholder: \"Partition\",\n        onChange: e => setPartition(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add \",\n        onClick: \"insertUser()\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(APP, \"G8fwCwEbpKLVsAxIF4EK6Uq06WI=\");\n\n_c = APP;\nexport default APP; //  db.collection.insert({ certificat: {certificat}, division : {division} ,\n// Password: {password}, role:{role},user:{email} },partition : {partition});\n// Certificat;\n// Division;\n// Password;\n// Role;\n// user;\n// _I-id;\n// _partition\n\nvar _c;\n\n$RefreshReg$(_c, \"APP\");","map":{"version":3,"sources":["/Users/kevinterrier/adm-sca/client/src/pages/AddUser.js"],"names":["useState","Realm","APP","APPID","App","id","updateUser","user","logIn","Credentials","emailPassword","props","setUser","client","currentUser","mongoClient","db","collection","email","setEmail","password","setPassword","certificat","setCertificat","role","setRole","division","setDivision","partition","setPartition","insert","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n//import { useNavigate } from \"react-router-dom\";\nimport * as Realm from \"realm-web\";\n\nfunction APP() {\n  const APPID = \"scanup-bnmev\";\n  const APP = new Realm.App({ id: APPID });\n\n  const updateUser = async () => {\n    const user = await APP.logIn(\n      Realm.Credentials.emailPassword(\n        \"public@scanup.vicat.fr\",\n        \"LeAheBaWtTRbM3KP\"\n      )\n    );\n    this.props.setUser(user);\n    const client = APP.currentUser.mongoClient(\"mongodb-atlas\");\n    const db = client.db(\"scanup-db\");\n    const collection = db.collection(\"ScanDivision\");\n  };\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [certificat, setCertificat] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [division, setDivision] = useState(\"\");\n  const [partition, setPartition] = useState(\"\");\n\n  db.collection.insert({\n    certificat: { certificat },\n    division: { division },\n    password: { password },\n    role: { role },\n    user: { email },\n    partition: { partition },\n  });\n\n  return (\n    <div>\n      <h1> Add user</h1>\n      <form>\n        <br />\n        <input\n          value={email}\n          type=\"email\"\n          placeholder=\"Email\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <br />\n        <input\n          type=\"text\"\n          value={password}\n          placeholder=\"Password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <br />\n        <input\n          type=\"text\"\n          value={certificat}\n          placeholder=\"Certificat\"\n          onChange={(e) => setCertificat(e.target.value)}\n        />\n        <br />\n        <input\n          type=\"text\"\n          value={role}\n          placeholder=\"Role\"\n          onChange={(e) => setRole(e.target.value)}\n        />\n        <br />\n        <input\n          type=\"text\"\n          value={division}\n          placeholder=\"Division\"\n          onChange={(e) => setDivision(e.target.value)}\n        />\n        <br />\n        <input\n          type=\"text\"\n          value={partition}\n          placeholder=\"Partition\"\n          onChange={(e) => setPartition(e.target.value)}\n        />\n        <input type=\"submit\" value=\"Add \" onClick=\"insertUser()\" />\n      </form>\n    </div>\n  );\n}\n\nexport default APP;\n\n//  db.collection.insert({ certificat: {certificat}, division : {division} ,\n// Password: {password}, role:{role},user:{email} },partition : {partition});\n\n// Certificat;\n// Division;\n// Password;\n// Role;\n// user;\n// _I-id;\n// _partition\n"]},"metadata":{},"sourceType":"module"}