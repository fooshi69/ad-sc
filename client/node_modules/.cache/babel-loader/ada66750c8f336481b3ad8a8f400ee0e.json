{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\"; //import { useNavigate } from \"react-router-dom\";\n\nimport * as Realm from \"realm-web\";\n\nfunction APP() {\n  _s();\n\n  const APPID = \"scanup-bnmev\";\n  const APP = new Realm.App({\n    id: APPID\n  });\n\n  const insertUser = async () => {\n    const user = await APP.logIn(Realm.Credentials.emailPassword(\"public@scanup.vicat.fr\", \"LeAheBaWtTRbM3KP\"));\n    const client = APP.currentUser.mongoClient(\"mongodb-atlas\");\n    const db = client.db(\"scanup-db\");\n    const collection = db.collection(\"ScanDivision\");\n  };\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [certificat, setCertificat] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [division, setDivision] = useState(\"\");\n  const [partition, setPartition] = useState(\"\");\n  db.collection.insert({\n    certificat: {\n      certificat\n    },\n    division: {\n      division\n    },\n    password: {\n      password\n    },\n    role: {\n      role\n    },\n    user: {\n      email\n    },\n    partition: {\n      partition\n    }\n  });\n}\n\n_s(APP, \"G8fwCwEbpKLVsAxIF4EK6Uq06WI=\");\n\n_c = APP;\nexport default APP;\n\nvar _c;\n\n$RefreshReg$(_c, \"APP\");","map":{"version":3,"sources":["/Users/kevinterrier/adm-sca/client/src/pages/connectUser.js"],"names":["useState","Realm","APP","APPID","App","id","insertUser","user","logIn","Credentials","emailPassword","client","currentUser","mongoClient","db","collection","email","setEmail","password","setPassword","certificat","setCertificat","role","setRole","division","setDivision","partition","setPartition","insert"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CACA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,WAAvB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,KAAK,GAAG,cAAd;AACA,QAAMD,GAAG,GAAG,IAAID,KAAK,CAACG,GAAV,CAAc;AAAEC,IAAAA,EAAE,EAAEF;AAAN,GAAd,CAAZ;;AAEA,QAAMG,UAAU,GAAG,YAAY;AAC7B,UAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,KAAJ,CACjBP,KAAK,CAACQ,WAAN,CAAkBC,aAAlB,CACE,wBADF,EAEE,kBAFF,CADiB,CAAnB;AAMA,UAAMC,MAAM,GAAGT,GAAG,CAACU,WAAJ,CAAgBC,WAAhB,CAA4B,eAA5B,CAAf;AACA,UAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,CAAU,WAAV,CAAX;AACA,UAAMC,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,cAAd,CAAnB;AACD,GAVD;;AAYA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC0B,SAAD,EAAYC,YAAZ,IAA4B3B,QAAQ,CAAC,EAAD,CAA1C;AAEAc,EAAAA,EAAE,CAACC,UAAH,CAAca,MAAd,CAAqB;AACnBR,IAAAA,UAAU,EAAE;AAAEA,MAAAA;AAAF,KADO;AAEnBI,IAAAA,QAAQ,EAAE;AAAEA,MAAAA;AAAF,KAFS;AAGnBN,IAAAA,QAAQ,EAAE;AAAEA,MAAAA;AAAF,KAHS;AAInBI,IAAAA,IAAI,EAAE;AAAEA,MAAAA;AAAF,KAJa;AAKnBf,IAAAA,IAAI,EAAE;AAAES,MAAAA;AAAF,KALa;AAMnBU,IAAAA,SAAS,EAAE;AAAEA,MAAAA;AAAF;AANQ,GAArB;AAQD;;GA/BQxB,G;;KAAAA,G;AAgCT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\n//import { useNavigate } from \"react-router-dom\";\nimport * as Realm from \"realm-web\";\n\nfunction APP() {\n  const APPID = \"scanup-bnmev\";\n  const APP = new Realm.App({ id: APPID });\n\n  const insertUser = async () => {\n    const user = await APP.logIn(\n      Realm.Credentials.emailPassword(\n        \"public@scanup.vicat.fr\",\n        \"LeAheBaWtTRbM3KP\"\n      )\n    );\n    const client = APP.currentUser.mongoClient(\"mongodb-atlas\");\n    const db = client.db(\"scanup-db\");\n    const collection = db.collection(\"ScanDivision\");\n  };\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [certificat, setCertificat] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [division, setDivision] = useState(\"\");\n  const [partition, setPartition] = useState(\"\");\n\n  db.collection.insert({\n    certificat: { certificat },\n    division: { division },\n    password: { password },\n    role: { role },\n    user: { email },\n    partition: { partition },\n  });\n}\nexport default APP;\n"]},"metadata":{},"sourceType":"module"}