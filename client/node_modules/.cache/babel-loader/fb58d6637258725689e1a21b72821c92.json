{"ast":null,"code":"var _jsxFileName = \"/Users/kevinterrier/adm-sca/client/src/pages/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; //import { useNavigate } from \"react-router-dom\";\n\nimport * as Realm from \"realm-web\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction APP() {\n  _s();\n\n  const APPID = \"scanup-bnmev\";\n  const APP = new Realm.App({\n    id: APPID\n  });\n\n  const insertUser = async () => {\n    const user = await APP.logIn(Realm.Credentials.emailPassword(\"public@scanup.vicat.fr\", \"LeAheBaWtTRbM3KP\"));\n    const client = APP.currentUser.mongoClient(\"mongodb-atlas\");\n    const db = client.db(\"scanup-db\");\n    const col = db.collection(\"ScanDivision\");\n    db.collection.insert({\n      certificat: {\n        certificat\n      },\n      division: {\n        division\n      },\n      password: {\n        password\n      },\n      role: {\n        role\n      },\n      user: {\n        email\n      },\n      partition: {\n        partition\n      }\n    });\n  };\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [certificat, setCertificat] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [division, setDivision] = useState(\"\");\n  const [partition, setPartition] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Insert user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        type: \"email\",\n        placeholder: \"Email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: password,\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: certificat,\n        placeholder: \"Certificat\",\n        onChange: e => setCertificat(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: role,\n        placeholder: \"Role\",\n        onChange: e => setRole(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: division,\n        placeholder: \"Division\",\n        onChange: e => setDivision(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: partition,\n        placeholder: \"Partition\",\n        onChange: e => setPartition(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add \",\n        onClick: insertUser()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(APP, \"G8fwCwEbpKLVsAxIF4EK6Uq06WI=\");\n\n_c = APP;\nexport default APP;\n\nvar _c;\n\n$RefreshReg$(_c, \"APP\");","map":{"version":3,"sources":["/Users/kevinterrier/adm-sca/client/src/pages/AddUser.js"],"names":["useState","Realm","APP","APPID","App","id","insertUser","user","logIn","Credentials","emailPassword","client","currentUser","mongoClient","db","col","collection","insert","certificat","division","password","role","email","partition","setEmail","setPassword","setCertificat","setRole","setDivision","setPartition","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CACA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,WAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,KAAK,GAAG,cAAd;AACA,QAAMD,GAAG,GAAG,IAAID,KAAK,CAACG,GAAV,CAAc;AAAEC,IAAAA,EAAE,EAAEF;AAAN,GAAd,CAAZ;;AAEA,QAAMG,UAAU,GAAG,YAAY;AAC7B,UAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,KAAJ,CACjBP,KAAK,CAACQ,WAAN,CAAkBC,aAAlB,CACE,wBADF,EAEE,kBAFF,CADiB,CAAnB;AAMA,UAAMC,MAAM,GAAGT,GAAG,CAACU,WAAJ,CAAgBC,WAAhB,CAA4B,eAA5B,CAAf;AACA,UAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,CAAU,WAAV,CAAX;AACA,UAAMC,GAAG,GAAGD,EAAE,CAACE,UAAH,CAAc,cAAd,CAAZ;AAEAF,IAAAA,EAAE,CAACE,UAAH,CAAcC,MAAd,CAAqB;AACnBC,MAAAA,UAAU,EAAE;AAAEA,QAAAA;AAAF,OADO;AAEnBC,MAAAA,QAAQ,EAAE;AAAEA,QAAAA;AAAF,OAFS;AAGnBC,MAAAA,QAAQ,EAAE;AAAEA,QAAAA;AAAF,OAHS;AAInBC,MAAAA,IAAI,EAAE;AAAEA,QAAAA;AAAF,OAJa;AAKnBd,MAAAA,IAAI,EAAE;AAAEe,QAAAA;AAAF,OALa;AAMnBC,MAAAA,SAAS,EAAE;AAAEA,QAAAA;AAAF;AANQ,KAArB;AAQD,GAnBD;;AAqBA,QAAM,CAACD,KAAD,EAAQE,QAAR,IAAoBxB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,QAAD,EAAWK,WAAX,IAA0BzB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkB,UAAD,EAAaQ,aAAb,IAA8B1B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACqB,IAAD,EAAOM,OAAP,IAAkB3B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACmB,QAAD,EAAWS,WAAX,IAA0B5B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACuB,SAAD,EAAYM,YAAZ,IAA4B7B,QAAQ,CAAC,EAAD,CAA1C;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,KAAK,EAAEsB,KADT;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,WAAW,EAAC,OAHd;AAIE,QAAA,QAAQ,EAAGQ,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEZ,QAFT;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,QAAQ,EAAGU,CAAD,IAAOL,WAAW,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,cATF,eAeE;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEd,UAFT;AAGE,QAAA,WAAW,EAAC,YAHd;AAIE,QAAA,QAAQ,EAAGY,CAAD,IAAOJ,aAAa,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;AAJhC;AAAA;AAAA;AAAA;AAAA,cAhBF,eAsBE;AAAA;AAAA;AAAA;AAAA,cAtBF,eAuBE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEX,IAFT;AAGE,QAAA,WAAW,EAAC,MAHd;AAIE,QAAA,QAAQ,EAAGS,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,cAvBF,eA6BE;AAAA;AAAA;AAAA;AAAA,cA7BF,eA8BE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEb,QAFT;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,QAAQ,EAAGW,CAAD,IAAOF,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,cA9BF,eAoCE;AAAA;AAAA;AAAA;AAAA,cApCF,eAqCE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAET,SAFT;AAGE,QAAA,WAAW,EAAC,WAHd;AAIE,QAAA,QAAQ,EAAGO,CAAD,IAAOD,YAAY,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ/B;AAAA;AAAA;AAAA;AAAA,cArCF,eA2CE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,MAA3B;AAAkC,QAAA,OAAO,EAAE1B,UAAU;AAArD;AAAA;AAAA;AAAA;AAAA,cA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD;;GAlFQJ,G;;KAAAA,G;AAoFT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\n//import { useNavigate } from \"react-router-dom\";\nimport * as Realm from \"realm-web\";\n\nfunction APP() {\n  const APPID = \"scanup-bnmev\";\n  const APP = new Realm.App({ id: APPID });\n\n  const insertUser = async () => {\n    const user = await APP.logIn(\n      Realm.Credentials.emailPassword(\n        \"public@scanup.vicat.fr\",\n        \"LeAheBaWtTRbM3KP\"\n      )\n    );\n    const client = APP.currentUser.mongoClient(\"mongodb-atlas\");\n    const db = client.db(\"scanup-db\");\n    const col = db.collection(\"ScanDivision\");\n\n    db.collection.insert({\n      certificat: { certificat },\n      division: { division },\n      password: { password },\n      role: { role },\n      user: { email },\n      partition: { partition },\n    });\n  };\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [certificat, setCertificat] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [division, setDivision] = useState(\"\");\n  const [partition, setPartition] = useState(\"\");\n\n  return (\n    <div>\n      <h1> Insert user</h1>\n      <form>\n        <br />\n        <input\n          value={email}\n          type=\"email\"\n          placeholder=\"Email\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <br />\n        <input\n          type=\"text\"\n          value={password}\n          placeholder=\"Password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <br />\n        <input\n          type=\"text\"\n          value={certificat}\n          placeholder=\"Certificat\"\n          onChange={(e) => setCertificat(e.target.value)}\n        />\n        <br />\n        <input\n          type=\"text\"\n          value={role}\n          placeholder=\"Role\"\n          onChange={(e) => setRole(e.target.value)}\n        />\n        <br />\n        <input\n          type=\"text\"\n          value={division}\n          placeholder=\"Division\"\n          onChange={(e) => setDivision(e.target.value)}\n        />\n        <br />\n        <input\n          type=\"text\"\n          value={partition}\n          placeholder=\"Partition\"\n          onChange={(e) => setPartition(e.target.value)}\n        />\n        <input type=\"submit\" value=\"Add \" onClick={insertUser()} />\n      </form>\n    </div>\n  );\n}\n\nexport default APP;\n"]},"metadata":{},"sourceType":"module"}